# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'S1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib.pyplot as plt

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1182, 660)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 50, 141, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(20, 90, 141, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 160, 171, 41))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(190, 160, 171, 41))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 210, 351, 31))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(190, 50, 171, 31))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(190, 90, 171, 31))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setGeometry(QtCore.QRect(110, 130, 151, 21))
        self.pushButton_8.setObjectName("pushButton_8")
        self.P2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.P2.setGeometry(QtCore.QRect(380, 130, 131, 41))
        self.P2.setObjectName("P2")
        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setGeometry(QtCore.QRect(380, 180, 131, 61))
        self.pushButton_9.setObjectName("pushButton_9")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(390, 100, 121, 31))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(390, 20, 121, 31))
        self.label_2.setObjectName("label_2")
        self.Pzad = QtWidgets.QLCDNumber(self.centralwidget)
        self.Pzad.setGeometry(QtCore.QRect(380, 50, 131, 41))
        self.Pzad.setObjectName("Pzad")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1182, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Zwiekszenie cisnienia"))
        self.pushButton_2.setText(_translate("MainWindow", "Zmniejszenie cisnienia"))
        self.pushButton_3.setText(_translate("MainWindow", "Start Simulation"))
        self.pushButton_4.setText(_translate("MainWindow", "Stop Simulation"))
        self.pushButton_5.setText(_translate("MainWindow", "Reset"))
        self.pushButton_6.setText(_translate("MainWindow", "Start Recording"))
        self.pushButton_7.setText(_translate("MainWindow", "Stop Recording"))
        self.pushButton_8.setText(_translate("MainWindow", "Write Data"))
        self.pushButton_9.setText(_translate("MainWindow", "ShowDiagram"))
        self.label.setText(_translate("MainWindow", "Wartość ciśnienia P2:"))
        self.label_2.setText(_translate("MainWindow", "Wartość zadana:"))


    def refValue(self):
        global Pout
        self.P2.display(Pout)

    def refInValue(self):
        global Pin
        self.Pzad.display(Pin)


from math import sqrt
global Pin
global P1
global Pout
global symulacja
global recording
global buffer
recording = 0
Pin = 0
P1 = 0
Pout = 0
symulacja = 0
buffer = []

def startSymulacji():
    global symulacja
    symulacja = 1
    print(f"start{symulacja}")

def stopSymulacji():
    global symulacja
    symulacja = 0
    print(f"zatrzymano{symulacja}")


def add():
    global Pin
    Pin = Pin + 1
    print(f"zajebiscie,{Pin}")


def subtract():
    global Pin
    Pin = Pin - 1
    print(f"kurwa{Pin}")


def trzeciRzad():
    global P1
    global Pout
    global Pin
    global symulacja
    global buffer
    h = 0.1
    Cp1 = 5.8
    Cp2 = 0.87
    Rp1 = 0.44
    Rp2 = 1.21
    Rp3 = 0.76
    Rp4 = 9.11
    Patm = 0
    if symulacja == 1:
        P1 = P1 + (((Pin - P1) / Rp1 - (P1 - Pout) / Rp2) / Cp1) * h
        Pout = P1 + (((P1 - Pout) / Rp3 - sqrt(Pout - Patm) / Rp4) / Cp2) * h
        print(Pout)
    if recording == 1 and symulacja == 1:
        buffer.append(str(Pout))
    ui.value = Pout

def reset():
    global P1
    global Pout
    global Pin
    global symulacja
    global buffer
    global recording
    P1 = 0
    Pout = 0
    Pin = 0
    symulacja = 0
    recording = 0
    buffer.clear()


def startRec():
    global recording
    recording = 1

def stopRec():
    global recording
    recording = 0
import csv
def writeData():
    global buffer
    x1 = []
    i = 0
    #
    # for i in range(len(buffer)):
    #     x1.append(i)
    #     i = i+1
    #
    # data = x1, buffer
    # with open('data.txt', 'w') as filehandle:
    #     filehandle.writelines("%s\n" % line for line in data)

    for i in range(len(buffer)):
        x1.append(i)
        i = i+1
    with open('data.csv', 'w') as filehandle:
        writer = csv.writer(filehandle, delimiter='\t')
        writer.writerows(zip(x1, buffer))



import pandas as pd
def drawChart():
    global buffer
    i = 0
    x1 = []
    for i in range(len(buffer)):
        x1.append(i)
        i = i+1
    # plt.plot(x1, temp)
    # plt.xlabel('time')
    # plt.ylabel('P2 Value')
    # plt.title('Two lines on same graph!')
    data = pd.read_csv('data.csv', sep='\s+', header=None)
    data = pd.DataFrame(data)

    x = data[0]
    y = data[1]
    plt.plot(x, y, 'r--')
    plt.show()


    # plt.show()
    # df = pd.DataFrame({
    #     'ylabel': buffer,
    #     'xlabel': x1
    # })
    # df.plot(kind='scatter', x='xlabel', y='ylabel', color='red')
    # plt.show()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.pushButton.clicked.connect(add)
    ui.pushButton_2.clicked.connect(subtract)
    ui.pushButton_3.clicked.connect(startSymulacji)
    ui.pushButton_4.clicked.connect(stopSymulacji)
    ui.pushButton_5.clicked.connect(reset)
    ui.pushButton_6.clicked.connect(startRec)
    ui.pushButton_7.clicked.connect(stopRec)
    ui.pushButton_8.clicked.connect(writeData)
    ui.pushButton_9.clicked.connect(drawChart)
    fps = 15
    timer = QtCore.QTimer()
    timer.timeout.connect(trzeciRzad)
    timer.timeout.connect(ui.refValue)
    timer.timeout.connect(ui.refInValue)
    timer.setInterval(1000 / fps)
    timer.start()


    MainWindow.show()
    sys.exit(app.exec_())
